@page "/Account/Register"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using MyCheeseShop.Components.Account.Shared
@using MyCheeseShop.Model
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject UserManager<User> UserManager
@inject IUserStore<User> UserStore
@inject SignInManager<User> SignInManager
@inject ILogger<Register> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Register</PageTitle>
<StatusMessage Message="@statusMessage" IsError="@isError" />

<div class="register-box">
    <link rel="stylesheet" href="register.css">
    <h2>Register</h2>
    <form>
        <div class="user-box">
            <label for="firstname"></label>
            <InputText id="firstname" class="form-control" placeholder="First Name" @bind-Value="Model.FirstName" />
        </div>
        <div class="user-box">
            <label for="lastname"></label>
            <InputText id="lastname" class="form-control" placeholder="Last Name" @bind-Value="Model.LastName" />
        </div>
        <div class="user-box">
            <label for="address"></label>
            <InputText id="address" class="form-control" placeholder="Address" @bind-Value="Model.Address" />
        </div>
        <div class="user-box">
            <label for="city"></label>
            <InputText id="city" class="form-control" placeholder="City" @bind-Value="Model.City" />
        </div>
        <div class="user-box">
            <label for="postcode"></label>
            <InputText id="postcode" class="form-control" placeholder="Post Code" @bind-Value="Model.PostCode" />
        </div>
        <div class="user-box">
            <label for="email"></label>
            <InputText id="email" class="form-control" placeholder="Email" @bind-Value="Model.Email" />
        </div>
        <div class="user-box">
            <label for="password"></label>
            <InputText id="password" type="password" class="form-control" placeholder="Password" @bind-Value="Model.Password" />
        </div>
        <div class="user-box">
            <label for="confirm"></label>
            <InputText id="confirm" type="password" class="form-control" placeholder="Confirm Password" @bind-Value="Model.ConfirmPassword" />
        </div>
        <a href="#">
            <span></span>
            <span></span>
            <span></span>
            <span></span>
            Register
        </a>
    </form>
</div>

@code {
    private IEnumerable<IdentityError>? identityErrors;

    [SupplyParameterFromForm]
    private RegisterModel Model { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    private string? statusMessage => identityErrors is null ? null : string.Join(" ", identityErrors.Select(error => error.Description));
    private bool isError;

    public async Task RegisterUser(EditContext editContext)
    {
        var user = new User
            {
                UserName = Model.Email,
                Email = Model.Email,
                FirstName = Model.FirstName,
                LastName = Model.LastName,
                Address = Model.Address,
                City = Model.City,
                PostCode = Model.PostCode
            };

            
        var result = await UserManager.CreateAsync(user, Model.Password);        

        if (!result.Succeeded)
        {
            identityErrors = result.Errors;
            isError = true;
            return;
        }
        await UserManager.AddToRoleAsync(user, "Customer");
        Logger.LogInformation("User created a new account with password.");

        var userId = await UserManager.GetUserIdAsync(user);

        await SignInManager.SignInAsync(user, isPersistent: false);
        RedirectManager.RedirectTo(ReturnUrl);
    }

    private sealed class RegisterModel
    {
        [Required(ErrorMessage = "Please enter your email.")]
        [EmailAddress(ErrorMessage = "Please enter a valid email address.")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "Please enter your email.")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Required(ErrorMessage = "Please enter your email.")]
        [DataType(DataType.Password)]
        [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; } = "";

        [Required(ErrorMessage = "Please enter your first name.")]
        public string FirstName { get; set; } = "";

        [Required(ErrorMessage = "Please enter your last name.")]
        public string LastName { get; set; } = "";

        [Required(ErrorMessage = "Please enter your address.")]
        public string Address { get; set; } = "";

        [Required(ErrorMessage = "Please enter your city")]
        public string City { get; set; } = "";

        [Required(ErrorMessage = "Please enter your post code.")]
        public string PostCode { get; set; } = "";
    }
}
